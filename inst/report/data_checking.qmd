---
title: "Consistency Checking"
subtitle: "Flag suspicious values"
date: 2023-03-07
date-modified: 2023-03-09
order: 4
editor: visual
author: "Chunzhe ZHANG(Spencer)"
toc: true
number-sections: true
highlight-style: pygments
---

It is important to flag suspicious values in an automated way. Checking multiple columns may involve a large number of R expressions to run to classify observations as suspicious, let's automate the process somewhat by specifying a vector of expressions.

# Data checking

```{mermaid general_flow}
flowchart LR
Ran[Range Checks]
Con["Cross-Variable Consistency"]
Rep[Checking and Reporting<br>With Minimal Coding] --> Li[Listings] & S[Summaries]
Ran --> Rep
Con --> Rep
```

## Load Library {.unnumbered}

```{r load_lib, message=FALSE, warning=FALSE}
require(Hmisc)
require(data.table)
require(qreport)
require(qs)
require(snt)
require(readr)
source("paths.R")
options(prType='html')
hookaddcap()
```

## Load Data {.unnumbered}

```{r load_data, message=FALSE, warning=FALSE}
d <- qread(o_routine)
setDT(d)
t <- read_csv(o_routine_csv)
```

## Consistency Checks

```{r data_checks, results='asis'}
d[, id := 1: .N]
checks <- expression(
  test > allout ,
  test > susp  ,
  conf > test,
  maltreat > conf,
  maladm > alladm,
  maldth > alladm,
  test > allout
)
dataChk(d, checks, id = c('id', 'adm0', 'adm1', 'adm2', 'adm3', 'hfname'), byid=TRUE, html=TRUE)
d[, id := NULL]
```

```{r consistency_plots, warning=FALSE, message=FALSE}
#| label: fig-consistency-plots
#| fig-cap: “Consistency Checks”
#| fig-height: 6
#| fig-width: 8
#| layout-ncol: 1
#| fig-subcap:
#| - “All cause outpatients and tests”
#| - “Suspected cases and tests”
#| - “Tests and confirmed cases”
#| - “Confirmed cases and treated”
#| - “Malaria admission and all cause admission”
#| - “Malaria deaths adn all cause admission”
#| - “Tests and all cause outpatients”
p_consistency_allout_test <- d |> consistency_check(allout, test)
ggplotlyr(p_consistency_allout_test) |>
  plotly::toWebGL()
p_consistency_susp_test <- d |> consistency_check(susp, test)
ggplotlyr(p_consistency_susp_test)|>
  plotly::toWebGL()
p_consistency_test_conf <- d |> consistency_check(test,conf)
ggplotlyr(p_consistency_test_conf)|>
  plotly::toWebGL()
p_consistency_conf_maltreat <- d |> consistency_check(conf, maltreat)
ggplotlyr(p_consistency_conf_maltreat)|>
  plotly::toWebGL()
p_consistency_alladm_maladm <- d |> consistency_check(alladm, maladm)
ggplotlyr(p_consistency_alladm_maladm)|>
  plotly::toWebGL()
p_consistency_alladm_maldth <- d |> consistency_check(alladm, maldth)
ggplotlyr(p_consistency_alladm_maldth)|>
  plotly::toWebGL()
p_consistency_allout_test <- d |> consistency_check(allout, test)
ggplotlyr(p_consistency_allout_test)|>
  plotly::toWebGL()
```
